{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport Footer from \"../components/footer.component\";\nimport Header from \"../components/header.component\";\nimport Nav from \"../components/nav.component\";\nimport Projects from \"../components/projects.component\";\nexport default function Home(props) {\n  useEffect(() => {\n    console.log(\"Mounted\");\n    const navbar = document.querySelector(\"#navbar\");\n    const header = document.querySelector(\"#welcome-section\");\n    const forest = document.querySelector(\".forest\");\n    const silhouette = document.querySelector(\".silhouette\");\n    let forestInitPos = -300;\n    console.log(\"FOREST\", forest);\n\n    window.onscroll = () => {\n      let scrollPos = document.documentElement.scrollTop || document.body.scrollTop; // if (scrollPos <= window.innerHeight) {\n      //   forest.style.bottom = `${parseInt(forestInitPos + scrollPos / 6)}px`;\n      // }\n      // if (scrollPos - 100 <= window.innerHeight)\n      //   header.style.visibility =\n      //     header.style.visibility === \"hidden\" && \"visible\";\n      // else header.style.visibility = \"hidden\";\n\n      if (scrollPos + 100 >= window.innerHeight) navbar.classList.add(\"bg-active\");else navbar.classList.remove(\"bg-active\");\n    };\n\n    (function navSmoothScrolling() {\n      const internalLinks = document.querySelectorAll('a[href^=\"#\"]');\n\n      for (let i in internalLinks) {\n        if (internalLinks.hasOwnProperty(i)) {\n          internalLinks[i].addEventListener(\"click\", e => {\n            e.preventDefault();\n            document.querySelector(internalLinks[i].hash).scrollIntoView({\n              block: \"start\",\n              behavior: \"smooth\"\n            });\n          });\n        }\n      }\n    })(); // return () => {\n    //   cleanup\n    // }\n\n  }, []);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Nav, {}), /*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsx(Projects, {}), /*#__PURE__*/_jsx(Footer, {})]\n  }) // <div>\n  //   <_Header />\n  //   <div id=\"welcome-section\">\n  //     <div className=\"forest\" />\n  //     {/* <div className=\"silhouette\" /> */}\n  //     {/* <div className=\"moon\" /> */}\n  //     {/* <div className=\"container\">\n  //       <h1>\n  //         <span className=\"line\">I do</span>\n  //         <span className=\"line\">graphic design</span>\n  //         <span className=\"line\">\n  //           <span className=\"color\">&</span> code.\n  //         </span>\n  //       </h1>\n  //       <div className=\"buttons\">\n  //         <a href=\"#projects\">my portfolio</a>\n  //         <a href=\"#contact\" className=\"cta\">\n  //           get in touch\n  //         </a>\n  //       </div>\n  //     </div>\n  //      */}\n  //     {/* <div className=\"site-layout\"> */}\n  //     <div className=\"profile\">\n  //       <div className=\"image\">\n  //         <Avatar\n  //           size={{ xs: 216, sm: 216, md: 216, lg: 216, xl: 216, xxl: 216 }}\n  //           src=\"https://avatars3.githubusercontent.com/u/4160246?s=460&v=4\"\n  //           // src=\"https://lh3.googleusercontent.com/pw/ACtC-3cLYpXDVQoR5I4o_WwK7i7psH9xEcU330aE9Xm6Y_R-IwufuWDROIOw3pvShKLpgG0Vdqnh4Peaq-T8jY-Hp0H3GJ5Mw1DYZ4Sx5BGBZrmqFpXB7ClIbfQx7cwU8aQcWnSqvLvQJ1XDdETFxdvji5AL=s640-no\"\n  //         />\n  //       </div>\n  //       <div className=\"info\">\n  //         <h1>\n  //           Hey! Iâ€™m <b>Herosony</b>\n  //         </h1>\n  //         <p>\n  //           Breakfast procuring no end happiness allowance assurance frank.\n  //           Met simplicity nor difficulty unreserved who. Entreaties mr\n  //           conviction dissimilar me astonished estimating cultivated.\n  //         </p>\n  //         <List\n  //           itemLayout=\"vertical\"\n  //           dataSource={socialIcons}\n  //           renderItem={(icon) => (\n  //             <Tooltip title={icon.title}>\n  //               <a href={icon.url} target=\"_blank\">\n  //                 {icon.icon}\n  //               </a>\n  //             </Tooltip>\n  //           )}\n  //           grid={{\n  //             xxl: 10,\n  //             xl: 10,\n  //             lg: 10,\n  //             md: 10,\n  //           }}\n  //         />\n  //       </div>\n  //     </div>\n  //   </div>\n  //   <About />\n  //   <p>List of posts:</p>\n  //   <ul>\n  //     {props.blogs.map((blog, idx) => {\n  //       return (\n  //         <li key={blog.id}>\n  //           <Link href={`/posts/${blog.slug}`}>\n  //             <a>{blog.title}</a>\n  //           </Link>\n  //         </li>\n  //       );\n  //     })}\n  //   </ul>\n  // </div>\n  ;\n}\nexport async function getStaticProps() {\n  const fs = require(\"fs\");\n\n  const matter = require(\"gray-matter\");\n\n  const {\n    v4: uuid\n  } = require(\"uuid\");\n\n  const files = fs.readdirSync(`${process.cwd()}/_posts`, \"utf-8\");\n  const blogs = files.filter(fn => fn.endsWith(\".md\")).map(fn => {\n    const path = `${process.cwd()}/_posts/${fn}`;\n    const rawContent = fs.readFileSync(path, {\n      encoding: \"utf-8\"\n    });\n    const {\n      data\n    } = matter(rawContent);\n    return _objectSpread(_objectSpread({}, data), {}, {\n      id: uuid()\n    });\n  }); // By returning { props: blogs }, the IndexPage component\n  // will receive `blogs` as a prop at build time\n\n  return {\n    props: {\n      blogs\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}